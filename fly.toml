# fly.toml app configuration file
app = 'koalens-backend'
primary_region = 'arn'
console_command = '/bin/sh'

# [build]
#  builder = "heroku/builder:24"

# [deploy]
#  release_command = 'npm run build'

[env]
  NODE_ENV = 'production'
  PORT = '8080'

# Remove the [processes] section, CMD in Dockerfile defines the start command
# [processes]
#  app = "node dist/server.js"

# Restore the services section
[[services]]
  protocol = "tcp"
  internal_port = 8080
  processes = ["app"]
  auto_stop_machines = false # Keep the machine running even if idle
  auto_start_machines = true # Start the machine automatically on requests
  min_machines_running = 1 # Ensure at least one machine is always running
  [services.concurrency]
    type = "connections"
    hard_limit = 25
    soft_limit = 20

  [[services.ports]]
    port = 80
    handlers = ["http"]
    force_https = true

  [[services.ports]]
    port = 443
    handlers = ["tls", "http"]
# #   [services.tcp_checks]
# #     interval = "15s"
# #     timeout = "2s"
# #     grace_period = "1s"
# #     restart_limit = 0
# #   [services.http_checks]
# #     interval = "10s"
# #     timeout = "2s"
# #     grace_period = "5s"
# #     method = "get"
# #     path = "/healthz"
# #     protocol = "http"
# #     restart_limit = 0
# #     tls_skip_verify = false
# #     [services.http_checks.headers]

[[vm]]
  memory = '1gb'
  cpu_kind = 'shared'
  cpus = 1

# Comment out services for SSH debugging
# [[services]]
#   protocol = "tcp"
#   internal_port = 8080
#   processes = ["app"]
#   auto_stop_machines = false # Keep the machine running even if idle
#   auto_start_machines = true # Start the machine automatically on requests
#   min_machines_running = 1 # Ensure at least one machine is always running
#   [services.concurrency]
#     type = "connections"
#     hard_limit = 25
#     soft_limit = 20
#   [[services.ports]]
#     port = 80
#     handlers = ["http"]
#     force_https = true
#   [[services.ports]]
#     port = 443
#     handlers = ["tls", "http"]